
0. Labels
-------------------------------
[ ] - Didn't checked
[v] - Done.
[c] - Checked by test code
[m] - Checked by manual inspection


1. Branch
-------------------------------
[ ] Branch (const string& location, const int capacity)
    [ ] - Default constructor with "~" for location, 0 for capacity
    [ ] - capacity saved in const variable
[ ] Copy constructor
[ ] Destructor
[ ] void addItem (Item* item)
    [ ] - Check for exception when added more then capacity items
    [ ] - Check for uppending at the end of the vector
[ ] Item* deleteItem (const int ID)
    [ ] - Check for exception on non existing ID
[ ] vector<Item*> getCatalog ()
    [c] - Check when branch is empty
    [c] - Check when more then 10 items added
[ ] void print_catalog_by_id() const
[ ] void print_catalog_by_price() const
    [ ] - Check for stable sort
    [ ] - Check when price changed
[ ] T* retrieveFinest(T* item)
    [ ] - Check exception when no item of type T in the brunch
[ ] string getLocation () const
[ ] void setLocation (const string& location)
[ ] int getCapacity() const
[ ] ~Branch()
    [ ] - Does not free the pointers


2. Item
-------------------------------
[v] Item (const int price, const string& manufacturer)
[v] void setPrice (const int price)
[v] int getPrice () const
[v] int getId () const
    [c] - Check right chronology of items
[v] void setManufacturer (const string& manufacturer)
[v] string getManufacturer () const
[v] virtual operator string () const = 0
[v] virtual ~Item ()


3. Computer  :  Item
-------------------------------
[ ] Computer (const int price, const string& manufacturer, const string& cpu, const bool isLaptop, const int ports)
    [ ] - Check ports variable set const
[ ] void setCpu (const string& cpu)
[ ] string getSpu () const
[ ] void setIsLaptop (const bool isLaptop)
[ ] bool getIsLaptop () const
[ ] int getPorts () const
[ ] operator string () const override
    [ ] - Use item's operator
[ ] void print_connected () const
    [ ] - Stable (First added should be first printed)


4. PeripheralDevice  :  Item
-------------------------------
[ ] PeripheralDevice (const int price, const string& manufacturer, const string& color, const bool isWireless)
[ ] void setColor (const string& color)
[ ] string getColor () const
[ ] void setIsWireless (const bool isWireless)
[ ] bool getIsWireless () const
[ ] virtual void connect(const Computer& computer) = 0
    [ ] - Check right print on casted argument e.g. PeripheralDevice* mouse = new Mouse()
    [ ] - Try minimazing code duplication
    [ ] - Exception connecting to more then one computers
    [ ] - Exception when two items of the same type connected
    [ ] - Exception when more connections then ports
    [ ] - Do notting when connecting the same computer
[ ] void disconnect()
    [ ] - Do notting when not connected
[ ] virtual operator string () const override = 0
[ ] ~PeripheralDevice ()
    [ ] - Disconnecting from computer


5. Keyboard  :  PeripheralDevice  
-------------------------------
[v] Keyboard (const int price, const string& manufacturer, const string& color, const bool isWireless, const int numOfKeys)
[v] void setNumOfKeys (const int numOfKeys)
[v] int getNumOfKeys () const
[v] void connect(const Computer& computer) const override
[v] operator string () const override
    [m] - Use PeripheralDevice's operator


6. Mouse  :  PeripheralDevice  
-------------------------------
[v] Keyboard (const int price, const string& manufacturer, const string& color, const bool isWireless, const int dpi)
[v] void setDpi (const int dpi)
[v] int getDpi () const
[v] void connect(const Computer& computer) const override
[v] operator string () const override
    [m] - Use PeripheralDevice's operator


7. Webcam  :  PeripheralDevice  
-------------------------------
[ ] Webcam (const int price, const string& manufacturer, const string& color, const bool isWireless, const string& resolution)
[ ] void setResolution (const string resolution)
[ ] string getResolution () const
[ ] void connect(const Computer& computer) const override
[ ] operator string () const override
    [ ] - Use PeripheralDevice's operator


8. HWExceptions  :  exception
-------------------------------
[ ] ExistingItemError
[ ] FullCatalogError
[ ] NonExcistingItemError
[ ] NoneExcistingItemTypeError
[ ] ConnectError


9. MainOffice (Singleton)  
-------------------------------
 ...


10. Notes:
-------------------------------
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Add const for functions / functions arguments / fields
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Maximaze use of reference variables
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Use static functions / static variables
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Use virtual functions
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Set functions abstruct where needed
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Right use of price 'private', 'protected', 'public'
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Set comments
[ ][ ][ ][ ][ ][ ][ ][ ][ ] - Check forum for updates and notes
 ^  ^  ^  ^  ^  ^  ^  ^  ^
 |  |  |  |  |  |  |  |  + Mouse
 |  |  |  |  |  |  |  + Keyboard
 |  |  |  |  |  |  + PeripheralDevice
 |  |  |  |  |  + Computer
 |  |  |  |  + Item
 |  |  |  + Branch
 |  |  + Webcam
 |  + HWExceptions
 + MainOffice


